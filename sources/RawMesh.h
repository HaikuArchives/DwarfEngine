#ifndef D_RAWMESH_H
#define D_RAWMESH_H

/*
 *	    The Dwarf Engine 3D Library
 *          copyright (c) 2000
 *
 *  #include <license.txt>
 *
 */

#include "Vertex.h"
#include "Vector.h"
#include "Color.h"
#include "Material.h"

namespace dwarf
{

	/*!
	 * The raw mesh is the mesh generated by the
	 * loading functions. This is so I will be able
	 * to change the Mesh format a lot (which I will),
	 * but only have to change the RawMesh -> Mesh
	 * conversion stuff.
	 * I will hopefully be able to make it purely internal.
	 */
	class RawMesh
	{
	public:
		RawMesh() : m_material(), m_objects(0)
		{}

		~RawMesh()
		{}

		void CalculateNormals();

		struct face_index
		{
			uint32 a;
			uint32 b;
			uint32 c;
		};

		struct object
		{
			object(): 
				m_num_vertices(0), 
				m_num_faces(0), 
				m_indices(0),
				m_vertices(0),
				m_normals(0),
				m_texcoords(0)
			{}
			int32 m_num_vertices;
			int32 m_num_faces;
			
			Array<face_index> m_indices;
			Array<Vertex<3> > m_vertices;
			Array<Vertex<3> > m_normals;
			Array<Point> m_texcoords;
		};

		HMaterial m_material;
		Array<object> m_objects;
	};

} // dwarf

#endif // D_ENTITY_H